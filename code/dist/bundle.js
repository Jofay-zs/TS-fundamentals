(()=>{"use strict";var t={278:function(t,e,r){var s,o=this&&this.__classPrivateFieldSet||function(t,e,r,s,o){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?o.call(t,r):o?o.value=r:e.set(t,r),r},i=this&&this.__classPrivateFieldGet||function(t,e,r,s){if("a"===r&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!s:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?s:"a"===r?s.call(t):s?s.value:e.get(t)};Object.defineProperty(e,"__esModule",{value:!0}),e.Art=void 0;const a=r(123),n=r(900);class h extends a.Item{constructor(t,e,r,i){super(t,e),s.set(this,void 0),o(this,s,r,"f"),this.artAuthor=i}get getArtType(){return i(this,s,"f")}set setArtType(t){o(this,s,t,"f")}get getArtAuthor(){return this.artAuthor}set setArtAuthor(t){this.artAuthor=t}showMyArt(){return`Hi, my name is ${this.artAuthor} and today I will show you a ${i(this,s,"f")} type art, its name is ${this.artName}`}}e.Art=h,s=new WeakMap,h.typeOfArt=n.TypesOfArt},900:(t,e)=>{var r;Object.defineProperty(e,"__esModule",{value:!0}),e.TypesOfArt=void 0,(r=e.TypesOfArt||(e.TypesOfArt={})).Painting="Painting",r.Sculpture="Sculpture",r.Architecture="Architecture",r.Music="Music",r.Dance="Dance",r.Coding="Coding"},123:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Item=void 0,e.Item=class{constructor(t,e){this.id=t,this.artName=e}get getId(){return this.id}get getArtName(){return this.artName}set setArtName(t){this.artName=t}}},879:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Show=void 0,e.Show=class{constructor(){this.show=[]}addArt(t){this.show.push(t)}removeArt(t){const e=this.show.findIndex((e=>e.getId===t.getId));let r;return e>=0&&(r=this.show[e],this.show.splice(e,1)),r}}}},e={};function r(s){var o=e[s];if(void 0!==o)return o.exports;var i=e[s]={exports:{}};return t[s].call(i.exports,i,i.exports,r),i.exports}(()=>{const t=r(278),e=r(900),s=r(879);let o=new t.Art("21hj3h1","adventure",e.TypesOfArt.Painting,"Anonimo");const i=new t.Art("123123jks","clowns",e.TypesOfArt.Dance,"Joker");console.log(o.showMyArt()),console.log(o),o.setArtAuthor="Lorenzo",o.setArtName="Bridge",o.setArtType=e.TypesOfArt.Architecture,console.log(o);let a=new s.Show;a.addArt(o),a.addArt(i),console.log(a),a.removeArt(o),console.log(a)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,